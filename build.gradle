plugins {
	id "com.gradle.plugin-publish" version "0.15.0"
	id "java-gradle-plugin"
	// Apply other plugins here, e.g. the kotlin plugin for a plugin written in Kotlin
	// or the groovy plugin if the plugin uses Groovy
}
apply plugin: 'java-gradle-plugin'
apply plugin: JavaPlugin

group='com.github.harbby'
version='1.1.8'

sourceCompatibility = 16
targetCompatibility = 16

if(project.hasProperty('target')) {
	apply from: "${project.target}.gradle"
}

dependencies {
	testImplementation group: 'junit', name: 'junit', version: '4.12'
	testImplementation gradleTestKit()
}


/*
  * Make sure our DSL helper file makes it into the jar for IDE auto-complete
  */
task stageGroovyDSL(type: Copy) {
	from(sourceSets.main.allSource) {
		include '**/*.gdsl'
	}
	into sourceSets.main.output.classesDirs.asPath
}
jar.dependsOn stageGroovyDSL
validatePlugins.dependsOn stageGroovyDSL
pluginUnderTestMetadata.dependsOn stageGroovyDSL
javadoc.dependsOn stageGroovyDSL

tasks.named("processResources") {
	duplicatesStrategy = 'include'
}
tasks.withType(org.gradle.jvm.tasks.Jar) { duplicatesStrategy = 'include' }


/*---------- publishing gradle  plugin--------*/
// First, apply the publishing plugin
//plugins {
//	id "com.gradle.plugin-publish" version "0.15.0"
//	id "java-gradle-plugin"
//	// Apply other plugins here, e.g. the kotlin plugin for a plugin written in Kotlin
//	// or the groovy plugin if the plugin uses Groovy
//}

// If your plugin has any external java dependencies, Gradle will attempt to
// download them from JCenter for anyone using the plugins DSL
// so you should probably use JCenter for dependency resolution in your own
// project.
repositories {
	mavenCentral()
}

// Use java-gradle-plugin to generate plugin descriptors and specify plugin ids
// Use ./gradlew clean assemble publishPlugins
gradlePlugin {
	plugins {
		greetingsPlugin {
			id = 'com.github.harbby.gradle.serviceloader'
			implementationClass = 'com.github.harbby.gradle.plugins.serviceloader.ServiceLoaderPlugin'
		}
	}
}

// The configuration example below shows the minimum required properties
// configured to publish your plugin to the plugin portal
pluginBundle {
	website = 'https://github.com/harbby/gradle-serviceloader'
	vcsUrl = 'https://github.com/harbby/gradle-serviceloader'
	description = 'this is java serviceloader plugin' +
					'\n\n' +
					'\tUsage:\n' +
					'\t\tserviceLoader {\n' +
					'\t\t\t    serviceInterface \'ideal.sylph.spi.Runner\'\n' +
					'\t\t\t    serviceInterface \'ideal.sylph.api.PipelinePlugin\'\n' +
					'\t\t}'
	tags = ['java_spi', 'serviceloader']

	plugins {
		greetingsPlugin {
			// id is captured from java-gradle-plugin configuration
			displayName = 'Gradle serviceloader plugin'
		}
	}
}